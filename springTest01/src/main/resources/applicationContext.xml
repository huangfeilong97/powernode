<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--告诉spring创建对象
        声明bean ， 就是告诉spring要创建某个类的对象
        id:对象的自定义名称，唯一值。 spring通过这个名称找到对象
        class:类的全限定名称（不能是接口，因为spring是反射机制创建对象，必须使用类）

        spring就完成 SomeService someService = new SomeServiceImpl();
        spring是把创建好的对象放入到map中， spring框架有一个map存放对象的。
           springMap.put(id的值， 对象）；
           例如 springMap.put("someService", new SomeServiceImpl());

        一个bean标签声明一个对象。
    -->
    <bean id="SomeService" class="com.hfl.service.impl.SomeServiceImpl"></bean>

    <bean id="SomeService1" class="com.hfl.service.impl.SomeServiceImpl"></bean>

    <!--
        spring能创建一个非自定义类的对象吗， 创建一个存在的某个类的对象。
     -->
    <bean id="mydate" class="java.util.Date" />

    <!--声明student对象
        注入：就是赋值的意思
        简单类型： spring中规定java的基本数据类型和String都是简单类型。
        di:给属性赋值
         1. set注入（设值注入） ：spring调用类的set方法， 你可以在set方法中完成属性赋值
          1）简单类型的set注入
            <bean id="xx" class="yyy">
               <property name="属性名字" value="此属性的值"/>
               一个property只能给一个属性赋值
               <property....>
            </bean>
          2) 引用类型的set注入 ： spring调用类的set方法
           <bean id="xxx" class="yyy">
              <property name="属性名称" ref="bean的id(对象的名称)" />
           </bean>
         2.构造注入：spring调用类有参数构造方法，在创建对象的同时，在构造方法中给属性赋值。
          构造注入使用 <constructor-arg> 标签
          <constructor-arg> 标签：一个<constructor-arg>表示构造方法一个参数。
          <constructor-arg> 标签属性：
             name:表示构造方法的形参名
             index:表示构造方法的参数的位置，参数从左往右位置是 0 ， 1 ，2的顺序
             value：构造方法的形参类型是简单类型的，使用value
             ref：构造方法的形参类型是引用类型的，使用ref
    -->
    <bean id="School" class="com.hfl.entity.School">
        <property name="name" value="平水镇中学"></property>
        <property name="address" value="平水镇"></property>
    </bean>

    <bean id="Student" class="com.hfl.entity.Student">
        <property name="id" value="1"></property><!--setId(1)-->
        <property name="name" value="张三"></property><!--setName("张三")-->
        <property name="age" value="21"></property><!--setAge(21)-->
        <property name="school" ref="School"></property>
    </bean>

    <!--使用name属性实现构造注入-->
    <bean id="myStudent1" class="com.hfl.entity.Student">
        <constructor-arg name="id" value="2"></constructor-arg><!--setId(1)-->
        <constructor-arg name="name" value="李四"></constructor-arg><!--setName("张三")-->
        <constructor-arg name="age" value="21"></constructor-arg><!--setAge(21)-->
        <constructor-arg name="school" ref="School"></constructor-arg>
    </bean>

    <!--使用index属性(index可省略)-->
    <bean id="myStudent2" class="com.hfl.entity.Student">
        <constructor-arg index="0" value="3"></constructor-arg><!--setId(1)-->
        <constructor-arg index="1" value="王五"></constructor-arg><!--setName("张三")-->
        <constructor-arg index="2" value="21"></constructor-arg><!--setAge(21)-->
        <constructor-arg index="3" ref="School"></constructor-arg>
    </bean>


</beans>
<!--
   spring的配置文件
   1.beans : 是根标签，spring把java对象成为bean。
   2.spring-beans.xsd 是约束文件，和mybatis指定  dtd是一样的。
-->